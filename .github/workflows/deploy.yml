name: Deploy
on:
  - push
  - pull_request

jobs:
  build:
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mousequake-x86_64-unknown-linux-gnu.tar.gz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: mousequake-x86_64-unknown-linux-musl.tar.gz

          - target: aarch64-apple-darwin
            os: macOS-latest
            name: mousequake-aarch64-apple-darwin.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: mousequake-x86_64-apple-darwin.tar.gz

          - target: x86_64-pc-windows-gnu
            os: windows-latest
            name: mousequake-x86_64-pc-windows-gnu.zip

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: mousequake-x86_64-pc-windows-msvc.zip

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip mousequake.exe
          7z a ../../../${{ matrix.name }} mousequake.exe
          cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip mousequake || true
          tar czvf ../../../${{ matrix.name }} mousequake
          cd -

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
